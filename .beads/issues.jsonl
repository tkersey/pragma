{"id":"pragma-1","title":"Confirm Apple Developer prerequisites","description":"Ensure the signing Mac has an active Apple Developer Program membership and Xcode command-line tools installed per cli.md.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-13T15:02:57.376247-07:00","updated_at":"2025-10-24T20:52:08.463753-07:00","closed_at":"2025-10-24T20:52:08.463753-07:00"}
{"id":"pragma-10","title":"Audit for API footguns","description":"Review the codebase for API sharp edges per Footgun Detector directive, identify misuse scenarios, and suggest mitigations.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-20T21:33:28.512875-07:00","updated_at":"2025-10-20T21:41:43.303614-07:00","closed_at":"2025-10-20T21:41:43.303614-07:00","comments":[{"id":1,"issue_id":"pragma-10","author":"tk","text":"Investigated CLI parsing, manifest execution, and runtime orchestration for Footgun Detector pass. Identified several sharp edges: unknown flags get folded into prompts, serial steps ignore nested tasks, invalid env knobs silently fall back, and parallel flows spawn unbounded codex processes (plus Windows threads racing RunContext). Drafting mitigations to report back.","created_at":"2025-10-21T04:41:14Z"}]}
{"id":"pragma-11","title":"Harden CLI parsing and manifest concurrency","description":"Implement Footgun Detector mitigations: treat unknown CLI flags as errors, validate env knob inputs, enforce manifest task policy, and add concurrency limits for POSIX parallel runner.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-20T21:55:51.592287-07:00","updated_at":"2025-10-20T22:02:44.786832-07:00","closed_at":"2025-10-20T22:02:44.786832-07:00","comments":[{"id":2,"issue_id":"pragma-11","author":"tk","text":"Implemented stricter CLI flag handling, env validation, manifest sanity checks, and POSIX concurrency limits. Added regression tests and updated parallel runner to honor PRAGMA_PARALLEL_LIMIT.","created_at":"2025-10-21T05:02:30Z"}]}
{"id":"pragma-12","title":"Improve batching and missing codex diagnostics","description":"Warn when parallel execution batches due to low PRAGMA_PARALLEL_LIMIT and surface clearer error when codex binary cannot be spawned.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-21T05:16:58.807914-07:00","updated_at":"2025-10-21T05:22:43.976472-07:00","closed_at":"2025-10-21T05:22:43.976472-07:00","comments":[{"id":3,"issue_id":"pragma-12","author":"tk","text":"Added batching notice when limit \u003c tasks and improved codex spawn failure reporting (including new regression test). Tests run with PRAGMA_RUN_ROOT=.pragma-test-runs ZIG_GLOBAL_CACHE_DIR=.zig-global-cache zig build test.","created_at":"2025-10-21T12:22:29Z"}]}
{"id":"pragma-13","title":"Clamp default parallel limit","description":"Ensure default parallel limit matches README promise by clamping detected CPU count to minimum of four workers.","status":"closed","priority":3,"issue_type":"task","created_at":"2025-10-21T05:30:09.090086-07:00","updated_at":"2025-10-21T05:31:22.508218-07:00","closed_at":"2025-10-21T05:31:22.508218-07:00","comments":[{"id":4,"issue_id":"pragma-13","author":"tk","text":"Clamped default parallel limit via clampParallelLimit helper and added regression test;  still green.","created_at":"2025-10-21T12:31:13Z"}]}
{"id":"pragma-14","title":"Upgrade Zig toolchain","description":"Move repo from Zig 0.16.0-dev.732+2f3234c76 to the latest dev snapshot, update docs/tooling, and ensure tests pass.","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-21T05:37:15.589132-07:00","updated_at":"2025-10-21T05:42:25.931921-07:00","closed_at":"2025-10-21T05:42:25.931921-07:00","comments":[{"id":5,"issue_id":"pragma-14","author":"tk","text":"Attempted zigup master but download failed (Could not resolve host ziglang.org). Also curl to https://ziglang.org/download/index.json fails with DNS resolution. Need network access to continue.","created_at":"2025-10-21T12:38:10Z"},{"id":6,"issue_id":"pragma-14","author":"tk","text":"Installed zig 0.16.0-dev.747+493ad58ff via zigup (using binary at ~/.local/share/zigup/.../files/zig). README updated to reference new snapshot. Tests pass with PRAGMA_RUN_ROOT=.pragma-test-runs ZIG_GLOBAL_CACHE_DIR=.zig-global-cache zig build test.","created_at":"2025-10-21T12:42:12Z"}]}
{"id":"pragma-15","title":"Commit and push pending changes","description":"","status":"closed","priority":1,"issue_type":"task","created_at":"2025-10-21T05:53:34.507125-07:00","updated_at":"2025-10-21T05:56:18.090318-07:00","closed_at":"2025-10-21T05:56:18.090318-07:00","comments":[{"id":7,"issue_id":"pragma-15","author":"tk","text":"Staged README and Zig updates, validated with 'zig build test' (passes; spawn failure test emits expected stderr). Preparing commit.","created_at":"2025-10-21T12:55:40Z"},{"id":8,"issue_id":"pragma-15","author":"tk","text":"Pushed main with 67016935 (adds env/parallel validation) atop existing 61e76d6.","created_at":"2025-10-21T12:56:09Z"}]}
{"id":"pragma-16","title":"Ignore zig global cache","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-21T05:59:19.018424-07:00","updated_at":"2025-10-21T06:00:33.04095-07:00","closed_at":"2025-10-21T06:00:33.04095-07:00","comments":[{"id":9,"issue_id":"pragma-16","author":"tk","text":"Added .zig-global-cache/ to .gitignore.","created_at":"2025-10-21T12:59:51Z"},{"id":10,"issue_id":"pragma-16","author":"tk","text":"Pushed main with 42517dbe (adds .zig-global-cache/ ignore).","created_at":"2025-10-21T13:00:22Z"}]}
{"id":"pragma-17","title":"Scope .beads gitignore","description":"","status":"closed","priority":2,"issue_type":"task","created_at":"2025-10-21T08:26:07.949091-07:00","updated_at":"2025-10-21T08:27:25.165789-07:00","closed_at":"2025-10-21T08:27:25.165789-07:00","comments":[{"id":11,"issue_id":"pragma-17","author":"tk","text":"User wants .gitignore to keep tracking .beads/*.jsonl while ignoring other files under .beads. Need to adjust patterns accordingly.","created_at":"2025-10-21T15:26:33Z"},{"id":12,"issue_id":"pragma-17","author":"tk","text":"Updated .gitignore to ignore all .beads content except *.jsonl so issue exports stay tracked.","created_at":"2025-10-21T15:27:13Z"}]}
{"id":"pragma-2","title":"Create MACOS_SIGN_P12 secret","description":"Export the Developer ID Application certificate with private key as DeveloperIDApplication.p12, base64 encode it, and store the value in the GitHub secret MACOS_SIGN_P12.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:00.24308-07:00","updated_at":"2025-10-13T15:03:00.24308-07:00","dependencies":[{"issue_id":"pragma-2","depends_on_id":"pragma-1","type":"blocks","created_at":"2025-10-13T15:03:26.759377-07:00","created_by":"tk"}]}
{"id":"pragma-3","title":"Create MACOS_SIGN_P12_PASSWORD secret","description":"Store the export password used for DeveloperIDApplication.p12 in the GitHub secret MACOS_SIGN_P12_PASSWORD.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:02.947565-07:00","updated_at":"2025-10-13T15:03:02.947565-07:00","dependencies":[{"issue_id":"pragma-3","depends_on_id":"pragma-2","type":"blocks","created_at":"2025-10-13T15:03:32.698518-07:00","created_by":"tk"}]}
{"id":"pragma-4","title":"Create MACOS_SIGNING_IDENTITY secret","description":"Run security find-identity -v -p codesigning on the signing Mac and save the full Developer ID Application identity string into GitHub secret MACOS_SIGNING_IDENTITY.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:05.930928-07:00","updated_at":"2025-10-13T15:03:05.930928-07:00","dependencies":[{"issue_id":"pragma-4","depends_on_id":"pragma-1","type":"blocks","created_at":"2025-10-13T15:03:34.837485-07:00","created_by":"tk"}]}
{"id":"pragma-5","title":"Create MACOS_KEYCHAIN_PASSWORD secret","description":"Generate a strong random password (e.g. openssl rand -base64 24) and save it as GitHub secret MACOS_KEYCHAIN_PASSWORD for the temporary CI keychain.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:08.423868-07:00","updated_at":"2025-10-13T15:03:08.423868-07:00","dependencies":[{"issue_id":"pragma-5","depends_on_id":"pragma-1","type":"blocks","created_at":"2025-10-13T15:03:37.088955-07:00","created_by":"tk"}]}
{"id":"pragma-6","title":"Create APPLE_ID secret","description":"Add the Apple ID email tied to the developer team as the GitHub secret APPLE_ID.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:10.670368-07:00","updated_at":"2025-10-13T15:03:10.670368-07:00","dependencies":[{"issue_id":"pragma-6","depends_on_id":"pragma-1","type":"blocks","created_at":"2025-10-13T15:03:40.078007-07:00","created_by":"tk"}]}
{"id":"pragma-7","title":"Create APPLE_TEAM_ID secret","description":"Find the 10-character Team ID from developer.apple.com or xcrun altool --list-providers and store it as GitHub secret APPLE_TEAM_ID.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:13.899476-07:00","updated_at":"2025-10-13T15:03:13.899476-07:00","dependencies":[{"issue_id":"pragma-7","depends_on_id":"pragma-6","type":"blocks","created_at":"2025-10-13T15:03:42.568488-07:00","created_by":"tk"}]}
{"id":"pragma-8","title":"Create APPLE_APP_SPECIFIC_PASSWORD secret","description":"Generate a new app-specific password at appleid.apple.com, label it (e.g. pragma-notarytool), and save it as GitHub secret APPLE_APP_SPECIFIC_PASSWORD.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:16.509295-07:00","updated_at":"2025-10-13T15:03:16.509295-07:00","dependencies":[{"issue_id":"pragma-8","depends_on_id":"pragma-6","type":"blocks","created_at":"2025-10-13T15:03:44.836139-07:00","created_by":"tk"}]}
{"id":"pragma-9","title":"Run optional notarytool credential check","description":"Use xcrun notarytool store-credentials PragmaNotaryProfile with APPLE_ID, APPLE_TEAM_ID, and APPLE_APP_SPECIFIC_PASSWORD, then run xcrun notarytool list --keychain-profile PragmaNotaryProfile to verify access.","status":"open","priority":2,"issue_type":"task","created_at":"2025-10-13T15:03:19.292904-07:00","updated_at":"2025-10-13T15:03:19.292904-07:00","dependencies":[{"issue_id":"pragma-9","depends_on_id":"pragma-6","type":"blocks","created_at":"2025-10-13T15:03:47.805035-07:00","created_by":"tk"},{"issue_id":"pragma-9","depends_on_id":"pragma-7","type":"blocks","created_at":"2025-10-13T15:03:50.123319-07:00","created_by":"tk"},{"issue_id":"pragma-9","depends_on_id":"pragma-8","type":"blocks","created_at":"2025-10-13T15:03:52.099049-07:00","created_by":"tk"}]}
