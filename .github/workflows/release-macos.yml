name: release-macos

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-sign-notarize:
    runs-on: macos-13
    env:
      KEYCHAIN_NAME: build.keychain-db
      KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
      SIGNING_IDENTITY: ${{ secrets.MACOS_SIGNING_IDENTITY }}
      NOTARY_PROFILE: PragmaNotaryProfile
      ARCHIVE_DIR: artifacts
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Zig
        run: brew install zig

      - name: Create signing keychain
        shell: bash
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_NAME"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
          echo "$MACOS_SIGN_P12" | base64 --decode > signing.p12
          security import signing.p12 -k "$KEYCHAIN_NAME" -P "$MACOS_SIGN_P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          rm signing.p12
          security list-keychains -s "$KEYCHAIN_NAME" $(security list-keychains | tr -d '"')
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        env:
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          MACOS_SIGN_P12_PASSWORD: ${{ secrets.MACOS_SIGN_P12_PASSWORD }}

      - name: Store notarization credentials
        shell: bash
        run: |
          xcrun notarytool store-credentials "$NOTARY_PROFILE" \
            --apple-id "$APPLE_ID" \
            --team-id "$APPLE_TEAM_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD" \
            --keychain "$KEYCHAIN_NAME"
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

      - name: Build universal binary
        shell: bash
        run: |
          zig build -Doptimize=ReleaseFast -Dtarget=x86_64-macos.13
          mv zig-out/bin/pragma zig-out/bin/pragma-x86_64
          zig build -Doptimize=ReleaseFast -Dtarget=aarch64-macos.13
          mv zig-out/bin/pragma zig-out/bin/pragma-arm64
          mkdir -p dist
          lipo -create -output dist/pragma zig-out/bin/pragma-x86_64 zig-out/bin/pragma-arm64

      - name: Codesign binary
        shell: bash
        run: |
          codesign --force --options runtime --timestamp --sign "$SIGNING_IDENTITY" dist/pragma
          codesign --verify --verbose dist/pragma

      - name: Package archive
        shell: bash
        run: |
          mkdir -p "$ARCHIVE_DIR"
          ditto -c -k dist/pragma "$ARCHIVE_DIR"/pragma-macos.zip
          shasum -a 256 "$ARCHIVE_DIR"/pragma-macos.zip > "$ARCHIVE_DIR"/pragma-macos.zip.sha256

      - name: Notarize archive
        shell: bash
        run: |
          xcrun notarytool submit "$ARCHIVE_DIR"/pragma-macos.zip \
            --keychain-profile "$NOTARY_PROFILE" \
            --wait \
            --progress

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/pragma-macos.zip
            artifacts/pragma-macos.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup keychain
        if: always()
        run: |
          security delete-keychain "$KEYCHAIN_NAME" || true
