name: release-macos

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-sign-notarize:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    env:
      MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
      MACOS_SIGN_P12_PASSWORD: ${{ secrets.MACOS_SIGN_P12_PASSWORD }}
      MACOS_SIGNING_IDENTITY: ${{ secrets.MACOS_SIGNING_IDENTITY }}
      MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Zig 0.16.0-dev.747+493ad58ff
        run: |
          set -euxo pipefail
          arch="$(uname -m)"
          case "$arch" in
            arm64) zig_arch="aarch64" ;;
            x86_64) zig_arch="x86_64" ;;
            *) echo "Unsupported architecture: $arch" >&2; exit 1 ;;
          esac

          url="https://ziglang.org/builds/zig-${zig_arch}-macos-0.16.0-dev.747+493ad58ff.tar.xz"
          curl --fail --location --output "${RUNNER_TEMP}/zig.tar.xz" "$url"
          tar -C "${RUNNER_TEMP}" -xf "${RUNNER_TEMP}/zig.tar.xz"
          zig_dir="$(tar -tf "${RUNNER_TEMP}/zig.tar.xz" | head -n 1 | tr -d '/')"
          echo "${RUNNER_TEMP}/${zig_dir}" >> "$GITHUB_PATH"
          "${RUNNER_TEMP}/${zig_dir}/zig" version

      - name: Prepare signing keychain
        run: |
          set -euxo pipefail
          keychain_path="${RUNNER_TEMP}/pragma-signing.keychain-db"
          security create-keychain -p "$MACOS_KEYCHAIN_PASSWORD" "$keychain_path"
          security set-keychain-settings -lut 21600 "$keychain_path"
          security unlock-keychain -p "$MACOS_KEYCHAIN_PASSWORD" "$keychain_path"
          existing_keychains=$(security list-keychains -d user | tr -d '"')
          security list-keychains -d user -s "$keychain_path" $existing_keychains
          security default-keychain -s "$keychain_path"
          security unlock-keychain -p "$MACOS_KEYCHAIN_PASSWORD" "$keychain_path"

          cert_path="${RUNNER_TEMP}/developer-id.p12"
          echo "$MACOS_SIGN_P12" | base64 --decode > "$cert_path"
          security import "$cert_path" \
            -k "$keychain_path" \
            -P "$MACOS_SIGN_P12_PASSWORD" \
            -A \
            -T /usr/bin/codesign \
            -T /usr/bin/security \
            -T /usr/bin/xcrun
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_KEYCHAIN_PASSWORD" "$keychain_path"
          security find-identity -v -p codesigning "$keychain_path"

      - name: Build pragma
        run: |
          set -euxo pipefail
          zig version
          zig build -Doptimize=ReleaseFast
          ls -l zig-out/bin

      - name: Codesign artifacts
        run: |
          set -euxo pipefail
          archive_root="dist/pragma-macos"
          mkdir -p dist/pragma-macos
          install -m 0755 zig-out/bin/pragma "${archive_root}/pragma"
          install -m 0755 zig-out/bin/pragma-scorecard "${archive_root}/pragma-scorecard"
          install -m 0644 README.md "${archive_root}/README.md"

          codesign --force --options runtime --timestamp --sign "$MACOS_SIGNING_IDENTITY" "${archive_root}/pragma"
          codesign --force --options runtime --timestamp --sign "$MACOS_SIGNING_IDENTITY" "${archive_root}/pragma-scorecard"
          codesign --verify --deep --strict "${archive_root}/pragma"
          codesign --verify --deep --strict "${archive_root}/pragma-scorecard"

      - name: Create archive
        run: |
          set -euxo pipefail
          ref_name="${GITHUB_REF_NAME:-snapshot}"
          archive_name="pragma-macos-${ref_name}.zip"
          (cd dist && ditto -c -k --sequesterRsrc --keepParent pragma-macos "${archive_name}")
          echo "ARCHIVE_NAME=${archive_name}" >> "$GITHUB_ENV"

      - name: Notarize archive
        run: |
          set -euxo pipefail
          xcrun notarytool submit "dist/${ARCHIVE_NAME}" \
            --wait \
            --apple-id "$APPLE_ID" \
            --team-id "$APPLE_TEAM_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD"

      - name: Staple binaries (best effort)
        continue-on-error: true
        run: |
          set -euxo pipefail
          xcrun stapler staple dist/pragma-macos/pragma || true
          xcrun stapler staple dist/pragma-macos/pragma-scorecard || true

      - name: Generate checksums
        run: |
          set -euxo pipefail
          (cd dist && shasum -a 256 "${ARCHIVE_NAME}" > "${ARCHIVE_NAME}.sha256")

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/${{ env.ARCHIVE_NAME }}
            dist/${{ env.ARCHIVE_NAME }}.sha256

      - name: Cleanup keychain
        if: always()
        run: |
          set -euxo pipefail
          keychain_path="${RUNNER_TEMP}/pragma-signing.keychain-db"
          security delete-keychain "$keychain_path" || true
          security default-keychain -s login.keychain
